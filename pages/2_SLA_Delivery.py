import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px

from src.data import get_facts

st.set_page_config(page_title="SLA / Delivery ‚Äî Olist BI", layout="wide")
st.title("üöö SLA / Delivery performance")

# --- –î–∞–Ω—ñ: –ª—ñ–º—ñ—Ç –±–µ—Ä–µ–º–æ —Ç—ñ–ª—å–∫–∏ –∑ –≥–æ–ª–æ–≤–Ω–æ—ó (–∞–±–æ –≤—Å—ñ –¥–∞–Ω—ñ, —è–∫—â–æ –∫–ª—é—á–∞ –Ω–µ–º–∞)
@st.cache_data(show_spinner=False)
def load_facts(data_dir: str, max_orders: int | None):
    f = get_facts(data_dir, max_orders=max_orders).copy()
    # —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –Ω–∞ –≤–∏–ø–∞–¥–æ–∫ –∫–∞—Å—Ç–æ–º–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    if "purchase_date" not in f.columns:
        ts = pd.to_datetime(f["order_purchase_timestamp"], errors="coerce")
        f["purchase_date"] = ts.dt.date
    for col in ["on_time", "delivery_time_h", "delay_h", "gross_revenue"]:
        if col not in f.columns:
            f[col] = np.nan if col != "gross_revenue" else 0.0
        else:
            if col in ("delivery_time_h", "delay_h", "gross_revenue"):
                f[col] = pd.to_numeric(f[col], errors="coerce")
    return f

facts = load_facts("data", st.session_state.get("max_orders"))

if facts.empty:
    st.error("–î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä –¥–∂–µ—Ä–µ–ª–æ/–ª—ñ–º—ñ—Ç –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.")
    st.stop()

# --- –§—ñ–ª—å—Ç—Ä–∏ –ø–µ—Ä—ñ–æ–¥—É
min_d, max_d = facts["purchase_date"].min(), facts["purchase_date"].max()
start, end = st.date_input("–ü–µ—Ä—ñ–æ–¥", value=(min_d, max_d), min_value=min_d, max_value=max_d)
view = facts[(facts["purchase_date"] >= start) & (facts["purchase_date"] <= end)].copy()

if view.empty:
    st.info("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö —É –≤–∏–±—Ä–∞–Ω–æ–º—É –ø–µ—Ä—ñ–æ–¥—ñ.")
    st.stop()

# --- KPI
on_time_rate = view["on_time"].mean() if view["on_time"].notna().any() else np.nan
avg_delivery_h = view["delivery_time_h"].mean()
avg_delay_h = view["delay_h"].mean()

k1, k2, k3 = st.columns(3)
k1.metric("On-time %", f"{on_time_rate*100:,.1f}%" if pd.notnull(on_time_rate) else "‚Äî")
k2.metric("–°–µ—Ä. —á–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (–≥–æ–¥)", f"{avg_delivery_h:,.1f}" if pd.notnull(avg_delivery_h) else "‚Äî")
k3.metric("–°–µ—Ä. –∑–∞–ø—ñ–∑–Ω–µ–Ω–Ω—è (–≥–æ–¥)", f"{avg_delay_h:,.1f}" if pd.notnull(avg_delay_h) else "‚Äî")

# --- –¢—Ä–µ–Ω–¥ on-time –ø–æ –¥–Ω—è—Ö
by_day = (view.groupby("purchase_date", as_index=False)
          .agg(on_time=("on_time", "mean"),
               orders=("order_id", "count")))
fig_on_time = px.line(by_day, x="purchase_date", y="on_time", markers=True,
                      title="On-time % –ø–æ –¥–Ω—è—Ö")
fig_on_time.update_yaxes(tickformat=".0%")
st.plotly_chart(fig_on_time, use_container_width=True)

# --- –†–æ–∑–ø–æ–¥—ñ–ª —á–∞—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏
st.subheader("–†–æ–∑–ø–æ–¥—ñ–ª —á–∞—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ (–≥–æ–¥)")
hist_delivery = px.histogram(view, x="delivery_time_h", nbins=40,
                             title="Histogram: delivery_time_h")
hist_delivery.update_layout(xaxis_title="–ì–æ–¥–∏–Ω–∏", yaxis_title="–ö-—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å")
st.plotly_chart(hist_delivery, use_container_width=True)

# --- –†–æ–∑–ø–æ–¥—ñ–ª –∑–∞–ø—ñ–∑–Ω–µ–Ω—å
st.subheader("–†–æ–∑–ø–æ–¥—ñ–ª –∑–∞–ø—ñ–∑–Ω–µ–Ω—å (–≥–æ–¥)")
hist_delay = px.histogram(view[view["delay_h"] > 0], x="delay_h", nbins=40,
                          title="Histogram: delay_h (—Ç—ñ–ª—å–∫–∏ –∑–∞–ø—ñ–∑–Ω–µ–Ω–Ω—è)")
hist_delay.update_layout(xaxis_title="–ì–æ–¥–∏–Ω–∏ –∑–∞–ø—ñ–∑–Ω–µ–Ω–Ω—è", yaxis_title="–ö-—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å")
st.plotly_chart(hist_delay, use_container_width=True)

# --- What-if: —Å–∫–æ—Ä–æ—á–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—å
st.subheader("–°–∫–æ—Ä–æ—á–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—å ‚Äî What-if")
reduction_pp = st.slider("–°–∫–æ—Ä–æ—á–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—å (–ø.–ø.)", 0.0, 20.0, 5.0, 0.5)
late = view[view["on_time"] == False]  # —Ç—ñ–ª—å–∫–∏ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ
recaptured = float(late["gross_revenue"].sum()) * (reduction_pp / 100.0)
st.write(f"–û—Ü—ñ–Ω–æ—á–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∞ –≤–∏—Ä—É—á–∫–∞: **${recaptured:,.0f}**")
st.caption("–¶–µ –ø—Ä–æ—Å—Ç–∞ –æ—Ü—ñ–Ω–∫–∞ –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª—É. –†–µ–∞–ª—å–Ω–∏–π –µ—Ñ–µ–∫—Ç –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –ø—Ä–∏—á–∏–Ω –ø—Ä–æ—Å—Ç—Ä–æ—á–æ–∫, SLA –∑ –ø–µ—Ä–µ–≤—ñ–∑–Ω–∏–∫–∞–º–∏ —Ç–æ—â–æ.")
